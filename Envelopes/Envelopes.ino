# define DURATION 16000 // max 65535
# define WAVE_ sin350_zn
// 122-255 | 156-199 | 200-155 | 250-124 | 270-114 | 350-88 | 400-77 | 500-61
# define LOOP_ 88
float dur = DURATION/255;

bool play_ = true;
int played_at = 0;
uint8_t i = 0;
uint8_t j = 0;
float enveloped;
int prev = analogRead(A5);
uint8_t cutoff;
long half_dur = DURATION/2;

float sin_half[] = {0.0, 0.012271538285719925, 0.024541228522912288, 0.03680722294135883, 0.049067674327418015, 0.06132073630220858, 0.07356456359966743, 0.0857973123444399, 0.0980171403295606, 0.11022220729388306, 0.1224106751992162, 0.13458070850712617, 0.14673047445536175, 0.15885814333386145, 0.17096188876030122, 0.18303988795514095, 0.19509032201612825, 0.20711137619221856, 0.2191012401568698, 0.2310581082806711, 0.24298017990326387, 0.25486565960451457, 0.26671275747489837, 0.27851968938505306, 0.29028467725446233, 0.3020059493192281, 0.3136817403988915, 0.3253102921622629, 0.33688985339222005, 0.34841868024943456, 0.3598950365349881, 0.37131719395183754, 0.3826834323650898, 0.3939920400610481, 0.40524131400498986, 0.41642956009763715, 0.4275550934302821, 0.43861623853852766, 0.44961132965460654, 0.46053871095824, 0.47139673682599764, 0.4821837720791227, 0.49289819222978404, 0.5035383837257176, 0.5141027441932217, 0.524589682678469, 0.5349976198870972, 0.5453249884220465, 0.5555702330196022, 0.5657318107836131, 0.5758081914178453, 0.5857978574564389, 0.5956993044924334, 0.6055110414043255, 0.6152315905806268, 0.6248594881423863, 0.6343932841636455, 0.6438315428897914, 0.6531728429537768, 0.6624157775901718, 0.6715589548470183, 0.680600997795453, 0.6895405447370668, 0.6983762494089728, 0.7071067811865476, 0.7157308252838186, 0.7242470829514669, 0.7326542716724128, 0.7409511253549591, 0.7491363945234593, 0.7572088465064846, 0.765167265622459, 0.7730104533627369, 0.7807372285720945, 0.7883464276266062, 0.7958369046088835, 0.8032075314806448, 0.8104571982525948, 0.8175848131515837, 0.8245893027850253, 0.8314696123025452, 0.838224705554838, 0.844853565249707, 0.8513551931052652, 0.8577286100002721, 0.8639728561215867, 0.8700869911087113, 0.8760700941954066, 0.8819212643483549, 0.8876396204028539, 0.8932243011955153, 0.8986744656939538, 0.9039892931234433, 0.9091679830905223, 0.9142097557035307, 0.9191138516900578, 0.9238795325112867, 0.9285060804732156, 0.9329927988347388, 0.937339011912575, 0.9415440651830208, 0.9456073253805213, 0.9495281805930367, 0.9533060403541938, 0.9569403357322089, 0.9604305194155658, 0.9637760657954398, 0.9669764710448521, 0.970031253194544, 0.9729399522055601, 0.9757021300385286, 0.9783173707196277, 0.9807852804032304, 0.9831054874312163, 0.9852776423889412, 0.9873014181578584, 0.989176509964781, 0.99090263542778, 0.99247953459871, 0.9939069700023561, 0.9951847266721968, 0.996312612182778, 0.9972904566786902, 0.9981181129001492, 0.9987954562051724, 0.9993223845883495, 0.9996988186962042, 0.9999247018391445, 1.0, 0.9999247018391445, 0.9996988186962042, 0.9993223845883495, 0.9987954562051724, 0.9981181129001492, 0.9972904566786902, 0.996312612182778, 0.9951847266721969, 0.9939069700023561, 0.99247953459871, 0.99090263542778, 0.989176509964781, 0.9873014181578584, 0.9852776423889412, 0.9831054874312163, 0.9807852804032304, 0.9783173707196277, 0.9757021300385286, 0.9729399522055602, 0.970031253194544, 0.9669764710448521, 0.9637760657954398, 0.9604305194155659, 0.9569403357322089, 0.9533060403541939, 0.9495281805930367, 0.9456073253805214, 0.9415440651830208, 0.937339011912575, 0.9329927988347388, 0.9285060804732156, 0.9238795325112867, 0.9191138516900578, 0.9142097557035307, 0.9091679830905225, 0.9039892931234434, 0.8986744656939539, 0.8932243011955152, 0.8876396204028539, 0.881921264348355, 0.8760700941954066, 0.8700869911087115, 0.8639728561215868, 0.8577286100002721, 0.8513551931052652, 0.8448535652497072, 0.8382247055548382, 0.8314696123025453, 0.8245893027850252, 0.8175848131515837, 0.8104571982525948, 0.8032075314806449, 0.7958369046088836, 0.7883464276266063, 0.7807372285720946, 0.7730104533627371, 0.7651672656224591, 0.7572088465064847, 0.7491363945234593, 0.740951125354959, 0.7326542716724128, 0.7242470829514669, 0.7157308252838187, 0.7071067811865476, 0.6983762494089729, 0.689540544737067, 0.6806009977954532, 0.6715589548470186, 0.662415777590172, 0.6531728429537766, 0.6438315428897914, 0.6343932841636455, 0.6248594881423863, 0.6152315905806269, 0.6055110414043257, 0.5956993044924335, 0.585797857456439, 0.5758081914178454, 0.5657318107836135, 0.5555702330196022, 0.5453249884220464, 0.5349976198870972, 0.524589682678469, 0.5141027441932218, 0.5035383837257176, 0.49289819222978415, 0.4821837720791229, 0.4713967368259978, 0.4605387109582402, 0.4496113296546069, 0.43861623853852755, 0.42755509343028203, 0.41642956009763715, 0.4052413140049899, 0.39399204006104815, 0.3826834323650899, 0.3713171939518377, 0.35989503653498833, 0.3484186802494348, 0.33688985339222033, 0.32531029216226326, 0.3136817403988914, 0.30200594931922803, 0.2902846772544624, 0.27851968938505317, 0.2667127574748985, 0.2548656596045147, 0.24298017990326407, 0.23105810828067133, 0.21910124015687005, 0.20711137619221884, 0.1950903220161286, 0.1830398879551409, 0.17096188876030122, 0.15885814333386147, 0.1467304744553618, 0.13458070850712628, 0.12241067519921635, 0.11022220729388324, 0.09801714032956083, 0.08579731234444016, 0.07356456359966773, 0.06132073630220849, 0.049067674327417966, 0.03680722294135883, 0.024541228522912326, 0.012271538285720007};
int8_t sin122_zn[] = { // 255
  0, 3, 6, 9, 12, 15, 18, 21, 24, 28, 31, 34, 37, 40, 43, 46, 48, 51, 54, 57, 60, 63, 65, 68, 71, 73, 76, 78, 81, 83, 85, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 109, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 124, 125, 126, 126, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 126, 126, 125, 124, 124, 123, 122, 121, 120, 119, 118, 117, 115, 114, 112, 111, 109, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 85, 83, 81, 78, 76, 73, 71, 68, 65, 63, 60, 57, 54, 51, 48, 46, 43, 40, 37, 34, 31, 28, 24, 21, 18, 15, 12, 9, 6, 3, 0, -4, -7, -10, -13, -16, -19, -22, -25, -29, -32, -35, -38, -41, -44, -47, -49, -52, -55, -58, -61, -64, -66, -69, -72, -74, -77, -79, -82, -84, -86, -89, -91, -93, -95, -97, -99, -101, -103, -105, -107, -109, -110, -112, -113, -115, -116, -118, -119, -120, -121, -122, -123, -124, -125, -125, -126, -127, -127, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -128, -127, -127, -126, -125, -125, -124, -123, -122, -121, -120, -119, -118, -116, -115, -113, -112, -110, -109, -107, -105, -103, -101, -99, -97, -95, -93, -91, -89, -86, -84, -82, -79, -77, -74, -72, -69, -66, -64, -61, -58, -55, -52, -49, -47, -44, -41, -38, -35, -32, -29, -25, -22, -19, -16, -13, -10, -7, -4
};
int8_t sin156_zn[]={ // 199
  0, 4, 8, 12, 16, 20, 23, 27, 31, 35, 39, 43, 47, 50, 54, 58, 61, 65, 68, 71, 75, 78, 81, 84, 87, 90, 93, 96, 98, 101, 103, 105, 108, 110, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 126, 127, 127, 127, 127, 127, 127, 127, 126, 126, 125, 124, 123, 122, 121, 120, 119, 117, 115, 114, 112, 110, 108, 105, 103, 101, 98, 96, 93, 90, 87, 84, 81, 78, 75, 71, 68, 65, 61, 58, 54, 50, 47, 43, 39, 35, 31, 27, 23, 20, 16, 12, 8, 4, 0, -4, -8, -12, -16, -20, -23, -27, -31, -35, -39, -43, -47, -50, -54, -58, -61, -65, -68, -71, -75, -78, -81, -84, -87, -90, -93, -96, -98, -101, -103, -105, -108, -110, -112, -114, -115, -117, -119, -120, -121, -122, -123, -124, -125, -126, -126, -127, -127, -127, -128, -127, -127, -127, -126, -126, -125, -124, -123, -122, -121, -120, -119, -117, -115, -114, -112, -110, -108, -105, -103, -101, -98, -96, -93, -90, -87, -84, -81, -78, -75, -71, -68, -65, -61, -58, -54, -50, -47, -43, -39, -35, -31, -27, -23, -20, -16, -12, -8, -4
};
int8_t sin200_zn[]={ // 155
  0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 54, 59, 64, 68, 72, 76, 80, 84, 88, 92, 95, 99, 102, 105, 108, 110, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 127, 127, 127, 127, 127, 127, 126, 125, 124, 122, 121, 119, 117, 115, 113, 110, 108, 105, 102, 99, 95, 92, 88, 84, 80, 76, 72, 68, 64, 59, 54, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0, -5, -10, -15, -20, -25, -30, -35, -40, -45, -50, -54, -59, -64, -68, -72, -76, -80, -84, -88, -92, -95, -99, -102, -105, -108, -110, -113, -115, -117, -119, -121, -122, -124, -125, -126, -127, -127, -127, -128, -127, -127, -127, -126, -125, -124, -122, -121, -119, -117, -115, -113, -110, -108, -105, -102, -99, -95, -92, -88, -84, -80, -76, -72, -68, -64, -59, -54, -50, -45, -40, -35, -30, -25, -20, -15, -10, -5
};
int8_t sin250_zn[]={ //124
  0, 6, 12, 19, 25, 31, 38, 44, 50, 55, 61, 67, 72, 77, 82, 87, 92, 96, 100, 104, 108, 111, 114, 117, 119, 121, 123, 125, 126, 127, 127, 127, 127, 127, 126, 125, 124, 122, 120, 118, 115, 112, 109, 106, 102, 98, 94, 89, 85, 80, 75, 69, 64, 58, 53, 47, 41, 34, 28, 22, 16, 9, 3, -3, -9, -16, -22, -28, -34, -41, -47, -53, -58, -64, -69, -75, -80, -85, -89, -94, -98, -102, -106, -109, -112, -115, -118, -120, -122, -124, -125, -126, -127, -127, -127, -127, -127, -126, -125, -123, -121, -119, -117, -114, -111, -108, -104, -100, -96, -92, -87, -82, -77, -72, -67, -61, -55, -50, -44, -38, -31, -25, -19, -12, -6
};
int8_t sin270_zn[]={ //114
  0, 6, 13, 20, 27, 34, 41, 47, 54, 60, 66, 72, 78, 83, 88, 93, 98, 102, 106, 110, 113, 116, 119, 121, 123, 125, 126, 127, 127, 127, 127, 127, 125, 124, 122, 120, 118, 115, 111, 108, 104, 100, 95, 91, 86, 80, 75, 69, 63, 57, 50, 44, 37, 31, 24, 17, 10, 3, -3, -10, -17, -24, -31, -37, -44, -50, -57, -63, -69, -75, -80, -86, -91, -95, -100, -104, -108, -111, -115, -118, -120, -122, -124, -125, -127, -127, -127, -127, -127, -126, -125, -123, -121, -119, -116, -113, -110, -106, -102, -98, -93, -88, -83, -78, -72, -66, -60, -54, -47, -41, -34, -27, -20, -13, -6
};
int8_t sin350_zn[]={ //88
  0, 9, 18, 26, 35, 44, 52, 60, 68, 75, 83, 89, 95, 101, 106, 111, 115, 119, 122, 124, 126, 127, 127, 127, 127, 125, 123, 120, 117, 113, 109, 104, 98, 92, 86, 79, 72, 64, 56, 48, 39, 31, 22, 13, 4, -4, -13, -22, -31, -39, -48, -56, -64, -72, -79, -86, -92, -98, -104, -109, -113, -117, -120, -123, -125, -127, -127, -127, -127, -126, -124, -122, -119, -115, -111, -106, -101, -95, -89, -83, -75, -68, -60, -52, -44, -35, -26, -18, -9
};
int8_t sin400_zn[]={ //77
  0, 10, 20, 30, 40, 50, 59, 68, 76, 84, 92, 99, 105, 110, 115, 119, 122, 125, 127, 127, 127, 127, 125, 122, 119, 115, 110, 105, 99, 92, 84, 76, 68, 59, 50, 40, 30, 20, 10, 0, -10, -20, -30, -40, -50, -59, -68, -76, -84, -92, -99, -105, -110, -115, -119, -122, -125, -127, -127, -127, -127, -125, -122, -119, -115, -110, -105, -99, -92, -84, -76, -68, -59, -50, -40, -30, -20, -10
};
int8_t sin500_zn[]={ //61
  0, 12, 25, 38, 50, 62, 73, 83, 92, 101, 108, 114, 120, 123, 126, 127, 127, 126, 123, 120, 114, 108, 101, 92, 83, 73, 62, 50, 38, 25, 12, 0, -12, -25, -38, -50, -62, -73, -83, -92, -101, -108, -114, -120, -123, -126, -127, -127, -126, -123, -120, -114, -108, -101, -92, -83, -73, -62, -50, -38, -25, -12
};
int8_t sin350_sq_zn[]={ //88
  0, 0, 2, 5, 10, 15, 21, 29, 37, 45, 54, 63, 72, 81, 89, 97, 105, 111, 116, 121, 124, 126, 127, 126, 124, 121, 116, 111, 105, 97, 89, 81, 72, 63, 54, 45, 37, 29, 21, 15, 10, 5, 2, 0, 0, 0, -2, -5, -9, -14, -21, -28, -35, -44, -52, -61, -70, -79, -87, -95, -103, -110, -115, -120, -124, -126, -127, -127, -126, -124, -120, -115, -110, -103, -96, -87, -79, -70, -61, -52, -44, -35, -28, -21, -14, -9, -5, -2, 0
};
  



void setup(){
  //Serial.begin(115200);
  pinMode(11,OUTPUT);
  pinMode(7,INPUT_PULLUP);
  pinMode(6,INPUT_PULLUP);
  pinMode(5,INPUT_PULLUP);
  DDRB |= 0b00100000;
  cli();
  TCCR2A &= 0b00001100; // Reset Timer
  TCCR2B &= 0b00110000; // Reset Timer
  TCCR2A |= 0b10100001; // Phase Correct mode
  TCCR2B |= 0b00000001; // Prescaler 1
  // Frequency = 31250 Hz, 0.032 ms
  OCR2A = 128;

  TCCR1A &= 0b00001100; //Reset
  TCCR1B &= 0b00100000; //Reset
  TCCR1A |= 0b00000000;
  TCCR1B |= 0b00001010; //Prescaler 8
  OCR1A = DURATION;
  // Frequency = 30.518 Hz, 32 ms for duration = 65535
  
  TIMSK2 |= (1<<TOIE2);
  TCNT1=0;
  TCNT2=0;
  //TIMSK1 |= (1<<TOIE1); // Timer 1 overflow flag
  sei();
}

ISR(TIMER2_OVF_vect){
  if(play_){
    i++;
    if (i>LOOP_){
      i=0;
    }
    if(~PIND & 0b10000000){
      // Sine
      cutoff = 65;
      enveloped = WAVE_[i]*sin_half[uint8_t(TCNT1/dur)] + 128;
    }else if(~PIND & 0b01000000){
      // Triangle
      cutoff = 80;
      enveloped = float(WAVE_[i]*(half_dur-abs(half_dur-TCNT1)))/half_dur + 128;
    }else if(~PIND & 0b00100000){
      // Inverse Saw
      cutoff = 80;
      enveloped = WAVE_[i]*(long)(DURATION-TCNT1)/DURATION + 128;
    }else{
      // Saw
      cutoff = 65;
      enveloped = WAVE_[i]*(long)(TCNT1)/DURATION + 128;
    }
      
    OCR2A = (uint8_t)enveloped;
    
    if(TCNT1 > DURATION-cutoff || TCNT1 < cutoff){ // Racing resolving threshold_Found by trial and error
      play_ = false;
      OCR2A = 128;
    }
  }
}


void loop(){
  int pres = analogRead(A5);//*0.7+prev*0.3;
  if(abs(pres-played_at)>50){
    played_at = pres;
    i=0;
    TCNT2=0;
    TCNT1=0;
    play_=true;
    PORTB ^= 0b00100000;
  }
  prev = pres;
  //delay(500);
}
